int lineCount2 = 2000;

ArrayList<Float> startLocations2 = new ArrayList<Float>();
ArrayList<Float> endLocations2 = new ArrayList<Float>();

float rotatetrigger4 = 0;

float counter2=0;

void setupMovementScene2() {
  for (int i=0; i<lineCount2; i++) {
    startLocations2.add(random(3500, width-3500));
    endLocations2.add(random(3500, width-3500));
  }
}

void drawMovementScene2() {
  
  colorMode(RGB, 255, 255, 255);

  if (frameCount %60 ==0) {
    startLocations2.clear();
    startLocations2.addAll(endLocations2);
    endLocations2.clear();
    for (int i=0; i<lineCount2; i++) {
      endLocations2.add(random(20, width-250));
    }
  }



  float r = map(noise(24, frameCount*0.001), 0, 1, -width/8, width/2);
  float g = map(noise(163, frameCount*0.001), 0, 1, -width/8, width/2);
  float b = map(noise(250, frameCount*0.001), 0, 1, -width/8, width/2);
  float trcl = map(noise(200, frameCount*0.001), 0, 1, 0, 100);
  
  float rndscale = map(noise(99, frameCount*0.001), 0, 1, 0.001,0.25);

//strokeWeight(5);





  background(0);
  stroke(255);
  strokeWeight(counter2);
  stroke(r, g, b);
  scale(0.5);

//rotatetrigger = random(0.1, 1.5);

noFill();

strokeWeight(counter2);

strokeCap(PROJECT);



  for (int i=0; i<lineCount2; i++) {
    float start2 = startLocations2.get(i);
    float end2 = endLocations2.get(i);

    float time2 = (float) frameCount %60 /60;
    float currentStart2 = lerp(start2, end2, time2);
    float currentEnd2 = lerp(end2, start2, time2);

    //time = pow(time,2); // Linear
    time2 = pow(time2, 4); // Ease In 
    //time = pow(time, 1f/8); // Ease Out
      //time = 0.5 - (cos(PI*time) /2); //Ease In-Out

    float location2 = lerp(currentStart2, currentEnd2, 0);
    rotate(0.5);
    counter2=counter2+0.001;
    line(location2, -64, location2, 64);
    
    
    //pushMatrix();
    //rotate(45);
    //popMatrix();  
    

    if (counter2 >= 20) {
      counter2 = 30;
    }

    //frameCout
  }
}
